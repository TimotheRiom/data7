package cve.model;

import cve.processing.cve.CVE;

import java.io.Serializable;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/**
 * Vulnerability
 * class that integrate all available information on a given vulnerability
 */
public class Vulnerability implements Serializable {

    //Map that contains all commits that fixed the vulnerability
    private final Map<String, Commit> patchingCommits;
    //CVE number that was given to this vulnerability
    private final String cve;
    //description of the vulnerability from the cve database
    private final String description;
    //List of Bug Ids that correspond to this vulnerability and for which it was possible to retrieve the commits
    private Set<String> bugIds;
    //timestamp of vulnerability last modification
    private long lastModified;
    //CWE number of the vulnerability (null if not existing)
    private String cwe;
    //vulnerability severity score
    private String score;

    /**
     * Scratch constructo
     *
     * @param cve
     * @param description
     * @param lastModified
     */
    public Vulnerability(String cve, String description, long lastModified) {
        this.patchingCommits = new HashMap<>();
        this.cve = cve;
        this.description = description;
        this.lastModified = lastModified;
        bugIds = new HashSet<>();
        cwe = null;
        score = null;
    }

    /**
     * Constructor from a CVE object
     *
     * @param cve object
     * @see CVE
     */
    public Vulnerability(CVE cve) {
        this.patchingCommits = new HashMap<>();
        this.cve = cve.getCVE();
        this.description = cve.getDescription();
        this.lastModified = cve.getLastModified();
        bugIds = new HashSet<>();
        cwe = cve.getCWE();
        score = cve.getScore();
    }

    /**
     * @return the type of the vulnerability according to the cwe classification
     * @see <a href="https://cwe.mitre.org">common weakness enumeration</a>
     */
    public String getCwe() {
        return cwe;
    }

    /**
     * @return the list of commit that patched the vulnerability
     * @see Commit
     */
    public Map<String, Commit> getPatchingCommits() {
        return patchingCommits;
    }

    /**
     * @return the cve identifier of the vulnerability
     * @see <a href="https://cve.mitre.org">common vulnerabilities and exposure</a>
     */
    public String getCve() {
        return cve;
    }

    /**
     * @return the description of the vulnerability according to the cve database
     */
    public String getDescription() {
        return description;
    }

    /**
     * @return the timestamp of the vulnerability last modification
     */
    public long getLastModified() {
        return lastModified;
    }

    /**
     * @return the severity score (cvss) of the vulnerability according to the nvd database
     * @see <a href="https://nvd.nist.gov/vuln-metrics/cvss">Common Vulnerability Scoring System (CVSS)</a>
     */
    public String getScore() {
        return score;
    }

    /**
     * @return the list of bug Id that correspond to this vulnerability and for which it was possible to retrieve a patching commit
     */
    public Set<String> getBugId() {
        return bugIds;
    }

    /**
     * Setter for the last modified field
     *
     * @param lastModified
     */
    public void setLastModified(long lastModified) {
        this.lastModified = lastModified;
    }

    /**
     * Setter for the CWE field
     *
     * @param cwe
     */
    public void setCwe(String cwe) {
        this.cwe = cwe;
    }

    /**
     * Setter for the score field
     *
     * @param score
     */
    public void setScore(String score) {
        this.score = score;
    }
}
